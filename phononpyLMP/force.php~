<?php
//use poscar to calculate the forces of the atoms and generate vasprun.xml
$HOME=dirname(__file__);
$sic=0;
$usingN=0;
$fz=0;
$alm=0;
for($i=1;$i<$argc;$i++){
if($argv[$i]=="-fz")$fz=1;
if($argv[$i]=="-sic")$sic=1;
if($argv[$i]=="-N")$usingN=1;
if($argv[$i]=="-alm")$alm=1;
}
$cha="*-*";
if($alm)$cha="POSCAR.*";
if(!$HOME)die("home error!\n");
$files=shell_exec("ls $cha 2>err");
if(!$files)die("no POSCARs!\n");
$files=explode("\n",$files);
$post="phonopy -f ";

if($fz){
	getVasp("SPOSCAR");
	$post.="--fz  dirs/dir_"."SPOSCAR"."/vasprun.xml";
}

for($i=0;$i<count($files)-1;$i++){
	printf("%s\n",$files[$i]);
	getVasp($files[$i]);
	$post.="  dirs/dir_".$files[$i]."/vasprun.xml";
}
shell_exec("$post;cp $HOME/band.conf $HOME/mesh.conf .");
function getVasp($POSCAR){
$HOME=dirname(__file__);
if(!$HOME)die("home error!\n");
	$dir="dirs/dir_".$POSCAR;
	if(is_dir($dir))shell_exec("rm -r $dir");
	shell_exec("mkdir -p $dir;mv $POSCAR $dir");
	get_latgen($dir,$POSCAR);
	getpos($dir);
	global $sic;
	global $usingN;
	if($sic){
		$potential="$HOME/lmp/SiC.tersoff";
		$sedSic="|sed \"s/BNC/SiC/g\"";
	}else{
	$potential="$HOME/lmp/BNC.tersoff";
		$sedSic='';
	}
	if($usingN){
		$sedN="|sed \"s/ C/ C N/g\"|sed \"s/mass 1 12.01/mass 1 12.01\\nmass 2 14/g\"";
	}else{
	$sedN='';
	}
		//echo "cat $HOME/lmp/in.graphene $sedSic  $sedN|~/lmp_ubuntu \n";
	shell_exec("cd $dir;cp  $potential .;cat $HOME/lmp/in.graphene $sedSic  $sedN|~/lmp_ubuntu ");

	get_vasprun($dir);
}
function getpos($dir){
// input file of latgen
	$fp=fopen("$dir/lat.in","w");
	fprintf($fp,"7\ny\nlat.pos\ny\n1 1 1 \n1\n3\nC\n0\npos.xyz\ndata.pos\nmap.in\n");
	shell_exec("cd $dir;~/latgen <lat.in");
}


function get_latgen($dir,$fileName){
	$fp=fopen("$dir/$fileName","r");
	$fout=fopen("$dir/lat.pos","w");
	$i=0;
	while($content=fgets($fp)){
		$i++;
		if($i==1 || $i==7)continue;
		fprintf($fout,$content);
	}
		fclose($fp);
	fclose($fout);
}

//read the dump file generated by lammps and return it to vasprun.xml
function get_vasprun($dir){
	$fp=fopen("$dir/dump.force","r");
	$fp1=fopen("$dir/dump.lammpstrj","r");
	if(!$fp)die("no dump.force found!\n");
	$fout=fopen("$dir/vasprun.xml","w");
	fprintf($fout,'<root><calculation><varray name="forces" >'."\n");
	for($i=0;$i<3;$i++)fgets($fp);
	list($natom)=fscanf($fp,"%d");
	//echo "Natom=".$natom."\n";
	for($i=0;$i<5;$i++)fgets($fp);
	for($i=0;$i<9;$i++)fgets($fp1);
	$i=0;
	$p=array();
	$p1=array();
	while(list($id[$i],$type[$i],$fx[$i],$fy[$i],$fz[$i])=fscanf($fp,"%d%d%f%f%f")){$p[$id[$i]-1]=$i;$i++;}
	while(list($id1[$i],$type[$i],$rx[$i],$ry[$i],$rz[$i])=fscanf($fp1,"%d%d%f%f%f")){
	$p1[$id1[$i]-1]=$i;$i++;
	}
	for($i=0;$i<$natom;$i++){
	 	$idx=$p[$i];
		fprintf($fout,  " <v>  %f %f %f </v>\n",$fx[$idx],$fy[$idx],$fz[$idx]);
		
	}
		fprintf($fout,'  </varray>'."\n");	
		fprintf($fout,"<structure><varray>\n");
		for($i=0;$i<$natom;$i++){
		$idx=$p1[$i];
		fprintf($fout,"<v>%f %f %f</v>\n",$rx[$idx],$ry[$idx],$rz[$idx]);
		}
		fprintf($fout,"</varray></structure></calculation></root>\n");
		
	fclose($fp);
	fclose($fout);
		
}
/*
$opt=argv[1];
switch($opt){
case "p" :
break;
case "":
break;
default:
die("wrong args!");
}
*/
?>
